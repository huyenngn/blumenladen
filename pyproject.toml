[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=3.4", "wheel"]
build-backend = "setuptools.build_meta"

[project]
dynamic = ["version"]

name = "Blumenladen"
description = "A Python library for automations in my mom's flower shop"
readme = "README.md"
requires-python = ">=3.10, <3.13"
license = { text = "Apache-2.0" }
authors = [{ name = "Ngan Huyen Thi Nguyen" }]
keywords = ["berlin", "florist", "flower", "flower shop", "florist shop"]
classifiers = [
  "Development Status :: 1 - Planning",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
dependencies = ["playwright", "numpy", "pydantic"]

[project.urls]
Homepage = "https://github.com/huyenngn/alphaghost"
Documentation = "https://huyenngn.github.io/alphaghost/"


[dependency-groups]
dev = ["ruff", "docformatter[tomli]", "python-lsp-server"]


[project.scripts]
blumenladen = "blumenladen.api"


[tool.docformatter]
wrap-descriptions = 72
wrap-summaries = 79


[tool.ruff]
line-length = 79

[tool.ruff.lint]
extend-select = [
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "D",      # pydocstyle
  "D212",   # "Multi-line docstring summary should start at the first line"
  "D402",   # "First line should not be the functionâ€™s 'signature'"
  "D417",   # "Missing argument descriptions in the docstring"
  "DTZ",    # flake8-datetimez
  "ERA",    # eradicate
  "FA",     # flake8-future-annotations
  "FIX",    # flake8-fixme
  "FURB",   # refurb
  "G",      # flake8-logging-format
  "I",      # isort
  "ICN",    # flake8-import-conventions
  "ISC001", # "Implicitly concatenated string literals on one line"
  "ISC003", # "Explicitly concatenated string should be implicitly concatenated"
  "LOG",    # flake8-logging
  "PIE",    # flake8-pie
  "PL",     # pylint
  "PT",     # flake8-pytest-style
  "RET",    # flake8-return
  "RUF",    # ruff
  "SIM",    # flake8-simplify
  "TC005",  # "Found empty type-checking block"
  "T1",     # flake8-debugger
  "UP",     # pyupgrade
  "YTT",    # flake8-2020
]

extend-ignore = [
  "D1",      # Missing docstring in _
  "D201",    # No blank lines allowed before function docstring  # auto-formatting
  "D202",    # No blank lines allowed after function docstring  # auto-formatting
  "D203",    # 1 blank line required before class docstring  # auto-formatting
  "D204",    # 1 blank line required after class docstring  # auto-formatting
  "D211",    # No blank lines allowed before class docstring  # auto-formatting
  "D213",    # Multi-line docstring summary should start at the second line
  "DTZ001",  # `tzinfo=None` passed to `datetime.datetime()`
  "DTZ005",  # `tz=None` passed to `datetime.datetime.now()`
  "E402",    # Module level import not at top of file
  "F403",    # `from _ import *` used; unable to detect undefined names
  "F405",    # `_` may be undefined, or defined from star imports
  "PLC0414", # Import alias does not rename original package # used for explicit reexports
  "PLR0904", # Too many public methods
  "PLR0911", # Too many return statements
  "PLR0912", # Too many branches
  "PLR0913", # Too many arguments in function definition
  "PLR0914", # Too many local variables
  "PLR0915", # Too many statements
  "PLR0916", # Too many Boolean expressions
  "PLR0917", # Too many positional arguments
  "PLR2004", # Magic value used in comparison, consider replacing `_` with a constant variable
  "PLW0603", # Using the global statement to update `_` is discouraged
  "PLW2901", # `for` loop variable `_` overwritten by assignment target
  "SIM108",  # Use ternary operator instead of `if`-`else`-block
]


[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.setuptools]
platforms = ["any"]
zip-safe = false

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.setuptools.packages.find]
include = ["blumenladen", "blumenladen.*"]

[tool.setuptools_scm]
local_scheme = "no-local-version"

[tool.uv]
default-groups = ["dev"]
